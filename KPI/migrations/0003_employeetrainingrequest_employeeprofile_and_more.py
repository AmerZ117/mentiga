# Generated by Django 4.2.7 on 2025-08-13 06:05

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('KPI', '0002_competency_employee_address_employee_date_of_birth_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmployeeTrainingRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(help_text='Why this training is needed')),
                ('training_type', models.CharField(choices=[('technical', 'Technical Training'), ('soft_skills', 'Soft Skills Training'), ('leadership', 'Leadership Training'), ('compliance', 'Compliance Training'), ('certification', 'Certification'), ('workshop', 'Workshop'), ('seminar', 'Seminar'), ('online_course', 'Online Course'), ('conference', 'Conference')], default='technical', max_length=20)),
                ('provider', models.CharField(blank=True, max_length=100)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('duration_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('business_justification', models.TextField(help_text='How this training benefits the business')),
                ('expected_outcomes', models.TextField(help_text='Expected outcomes and benefits')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('in_progress', 'In Progress'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('review_date', models.DateTimeField(blank=True, null=True)),
                ('review_comments', models.TextField(blank=True)),
                ('approved_date', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_requests', to='KPI.employee')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_training_requests', to='KPI.employee')),
            ],
            options={
                'verbose_name': 'Employee Training Request',
                'verbose_name_plural': 'Employee Training Requests',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, help_text='Personal bio and summary')),
                ('skills', models.TextField(blank=True, help_text='Skills and competencies')),
                ('certifications', models.TextField(blank=True, help_text='Professional certifications')),
                ('languages', models.CharField(blank=True, help_text='Languages spoken', max_length=200)),
                ('interests', models.TextField(blank=True, help_text='Professional interests and hobbies')),
                ('linkedin_profile', models.URLField(blank=True, help_text='LinkedIn profile URL')),
                ('portfolio_url', models.URLField(blank=True, help_text='Portfolio or personal website')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('resume', models.FileField(blank=True, null=True, upload_to='resumes/')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100)),
                ('emergency_contact_relationship', models.CharField(blank=True, max_length=50)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20)),
                ('emergency_contact_email', models.EmailField(blank=True, max_length=254)),
                ('bank_account_number', models.CharField(blank=True, max_length=50)),
                ('bank_name', models.CharField(blank=True, max_length=100)),
                ('tax_id', models.CharField(blank=True, max_length=50)),
                ('social_security_number', models.CharField(blank=True, max_length=20)),
                ('is_profile_complete', models.BooleanField(default=False)),
                ('last_profile_update', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='KPI.employee')),
            ],
            options={
                'verbose_name': 'Employee Profile',
                'verbose_name_plural': 'Employee Profiles',
            },
        ),
        migrations.CreateModel(
            name='EmployeeLeaveRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_type', models.CharField(choices=[('annual', 'Annual Leave'), ('sick', 'Sick Leave'), ('personal', 'Personal Leave'), ('maternity', 'Maternity Leave'), ('paternity', 'Paternity Leave'), ('bereavement', 'Bereavement Leave'), ('study', 'Study Leave'), ('other', 'Other')], default='annual', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('total_days', models.DecimalField(decimal_places=1, help_text='Total leave days requested', max_digits=5)),
                ('reason', models.TextField(help_text='Reason for leave request')),
                ('contact_during_leave', models.CharField(blank=True, help_text='Emergency contact during leave', max_length=100)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('review_date', models.DateTimeField(blank=True, null=True)),
                ('review_comments', models.TextField(blank=True)),
                ('approved_date', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_requests', to='KPI.employee')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_leave_requests', to='KPI.employee')),
            ],
            options={
                'verbose_name': 'Employee Leave Request',
                'verbose_name_plural': 'Employee Leave Requests',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeGoalSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('goal_type', models.CharField(choices=[('performance', 'Performance Goal'), ('development', 'Development Goal'), ('project', 'Project Goal'), ('personal', 'Personal Goal')], default='performance', max_length=20)),
                ('target_date', models.DateField()),
                ('success_criteria', models.TextField(help_text='How success will be measured')),
                ('resources_needed', models.TextField(blank=True, help_text='Resources and support needed')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('in_progress', 'In Progress'), ('completed', 'Completed')], default='draft', max_length=20)),
                ('progress', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=20)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('approval_comments', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_goals', to='KPI.employee')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goal_submissions', to='KPI.employee')),
            ],
            options={
                'verbose_name': 'Employee Goal Submission',
                'verbose_name_plural': 'Employee Goal Submissions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeSelfEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('self_assessment', models.TextField(help_text="Employee's self-assessment")),
                ('achievements', models.TextField(help_text='Key achievements during the period')),
                ('challenges', models.TextField(help_text='Challenges faced and how they were overcome')),
                ('goals_met', models.TextField(help_text='Goals that were met during the period')),
                ('areas_for_improvement', models.TextField(help_text='Areas where improvement is needed')),
                ('career_aspirations', models.TextField(help_text='Career goals and aspirations')),
                ('training_needs', models.TextField(help_text='Training and development needs')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='draft', max_length=20)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('review_comments', models.TextField(blank=True)),
                ('review_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='self_evaluations', to='KPI.employee')),
                ('period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='KPI.evaluationperiod')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_self_evaluations', to='KPI.employee')),
            ],
            options={
                'verbose_name': 'Employee Self-Evaluation',
                'verbose_name_plural': 'Employee Self-Evaluations',
                'ordering': ['-created_at'],
                'unique_together': {('employee', 'period')},
            },
        ),
    ]
