# Generated by Django 4.2.7 on 2025-08-12 03:17

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('KPI', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Competency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('category', models.CharField(max_length=50)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Competencies',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='address',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='employee',
            name='date_of_birth',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='employee',
            name='emergency_contact',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='employee',
            name='emergency_phone',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='employee',
            name='gender',
            field=models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1),
        ),
        migrations.AddField(
            model_name='employee',
            name='salary',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='evaluation',
            name='areas_for_improvement',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='evaluation',
            name='development_plan',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='evaluation',
            name='performance_rating',
            field=models.CharField(blank=True, choices=[('excellent', 'Excellent (90-100)'), ('very_good', 'Very Good (80-89)'), ('good', 'Good (70-79)'), ('satisfactory', 'Satisfactory (60-69)'), ('needs_improvement', 'Needs Improvement (Below 60)')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='evaluation',
            name='strengths',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='goal',
            name='goal_type',
            field=models.CharField(choices=[('performance', 'Performance Goal'), ('development', 'Development Goal'), ('project', 'Project Goal'), ('personal', 'Personal Goal')], default='performance', max_length=20),
        ),
        migrations.AddField(
            model_name='goal',
            name='obstacles',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='goal',
            name='priority',
            field=models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=20),
        ),
        migrations.AddField(
            model_name='goal',
            name='success_criteria',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='goal',
            name='support_needed',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='training',
            name='cost',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='training',
            name='duration_hours',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True),
        ),
        migrations.AddField(
            model_name='training',
            name='feedback',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='training',
            name='location',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='training',
            name='objectives',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='training',
            name='outcomes',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='training',
            name='provider',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='training',
            name='training_type',
            field=models.CharField(choices=[('technical', 'Technical Training'), ('soft_skills', 'Soft Skills Training'), ('leadership', 'Leadership Training'), ('compliance', 'Compliance Training'), ('certification', 'Certification'), ('workshop', 'Workshop'), ('seminar', 'Seminar')], default='technical', max_length=20),
        ),
        migrations.AlterField(
            model_name='employee',
            name='status',
            field=models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('terminated', 'Terminated'), ('probation', 'Probation'), ('contract', 'Contract')], default='active', max_length=20),
        ),
        migrations.AlterField(
            model_name='evaluation',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('reviewed', 'Reviewed'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('under_review', 'Under Review')], default='draft', max_length=20),
        ),
        migrations.AlterField(
            model_name='evaluationperiod',
            name='period_type',
            field=models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly'), ('mid_year', 'Mid-Year')], max_length=20),
        ),
        migrations.AlterField(
            model_name='goal',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='pending', max_length=20),
        ),
        migrations.AlterField(
            model_name='training',
            name='status',
            field=models.CharField(choices=[('planned', 'Planned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('postponed', 'Postponed')], default='planned', max_length=20),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('report_type', models.CharField(choices=[('employee_performance', 'Employee Performance Report'), ('department_performance', 'Department Performance Report'), ('training_report', 'Training Report'), ('goal_progress', 'Goal Progress Report'), ('evaluation_summary', 'Evaluation Summary Report'), ('competency_report', 'Competency Assessment Report'), ('custom', 'Custom Report')], max_length=30)),
                ('format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('html', 'HTML')], default='pdf', max_length=10)),
                ('parameters', models.JSONField(blank=True, default=dict)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('is_scheduled', models.BooleanField(default=False)),
                ('schedule_frequency', models.CharField(blank=True, max_length=20)),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='PerformanceImprovementPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('extended', 'Extended'), ('terminated', 'Terminated')], default='active', max_length=20)),
                ('objectives', models.TextField()),
                ('action_plan', models.TextField()),
                ('success_criteria', models.TextField()),
                ('progress_notes', models.TextField(blank=True)),
                ('outcome', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='KPI.employee')),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='KPI.evaluation')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('evaluation_due', 'Evaluation Due'), ('goal_deadline', 'Goal Deadline'), ('training_reminder', 'Training Reminder'), ('report_ready', 'Report Ready'), ('system_alert', 'System Alert')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GoalProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress_percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('update_date', models.DateField()),
                ('comments', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_updates', to='KPI.goal')),
            ],
            options={
                'ordering': ['-update_date'],
            },
        ),
        migrations.CreateModel(
            name='CompetencyAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comments', models.TextField(blank=True)),
                ('competency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='KPI.competency')),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competency_assessments', to='KPI.evaluation')),
            ],
            options={
                'ordering': ['competency__category', 'competency__name'],
            },
        ),
    ]
